创建repository：mkdir
将目录变成git可以管理的库：git init

添加文件(暂存区)：git add filename
(可提交多个文件)
提交文件(分支)：git commit -m "说明"

查看工作状态：git status
查看修改内容：git diff
查看所有日志：git log
(信息太多可用git log --pretty==oneline)
查看命令历史：git reflog

HEAD指向的是当前的版本
HEAD^指向上个版本
HEAD^^指向上上个版本
HEAD~100指向上100个版本

版本来回切换：git reset --hard commit_ID(前7位) 

三种情况的撤销方法
1.未放到暂存区(只使用了add)
git checkout -- filename 
2.已放到暂存区(add和commit都使用)
First：git reset HEAD filename (回到版本库)
Second：git checkout --filename (回到工作区)
3.已提交想撤销
git reset --hard commit_ID (版本退回)

删除文件：git rm filename
(如果文件已经提交到版本库 不用担心误删)
将误删的找回(只能回到最新版本)
git checkout --filename

把文件放到github：git push -u origin master
(-u可以把本地和远程的分支关联起来 第一次需要-u)
关联github：git remote add origin git@github.com:name/file.git
推送最新修改：git push origin master

克隆仓库到本地：git clone git@github.com:name/file.git
(需要知道地址)

查看分支：git branch
创建分支：git branch name
切换分支：git checkout name
创建并切换分支：git checkout -b name
合并某分支到当前分支：git merge name(Fast forward合并)
如果两个分支斗指向同一个位置 则无法合并
则先结局冲突 再提交
删除分支：git branch -d name

git merge --no-ff name
普通合并能看出来曾经做过合并
快速fast forward就看不出来

Bug分支：
有个bug要修复 想创建临时分支issue-101 但是master的工作现场还没完成不能提交
储存工作现场：git stash
1.切换到dev分支 创建切换到临时分支 修复bug
2.切换到dev分支 合并分支 删除临时分支
查看工作现场：git stash list
恢复工作现场：git stash apply
删除工作现场：git stash drop
恢复删除工作现场：git stash pop

git stash apply stash@{0}
(可以指定恢复stash 先用git stash list查看)
